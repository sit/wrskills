---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const problems = await getCollection("problems");

  return problems.map((problem) => ({
    params: { problemId: problem.slug },
    props: { problem },
  }));
}

const { problem } = Astro.props;
const { Content } = await problem.render();

// Get topic information
const topics = await getCollection("topics");
const problemTopics = topics.filter((topic) =>
  problem.data.topics.includes(topic.slug),
);
---

<Layout title={`${problem.data.title} - Wild Rift Learning`}>
  <header>
    <nav>
      <a href="/" role="button" class="outline">‚Üê Home</a>
      {
        problemTopics.map((topic) => (
          <a href={`/topics/${topic.slug}`} role="button" class="outline">
            {topic.data.icon} {topic.data.title}
          </a>
        ))
      }
    </nav>

    <hgroup>
      <h1>{problem.data.title}</h1>
      <p>
        <span class="badge">{problem.data.difficulty}</span>
        {problem.data.roles.map((role) => <span class="badge">{role}</span>)}
        {
          problem.data.championTypes.map((type) => (
            <span class="badge">{type}</span>
          ))
        }
      </p>
    </hgroup>
  </header>

  <article>
    <Content />
  </article>
</Layout>

<style>
  header {
    margin-bottom: 2rem;
  }

  nav {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
  }

  .badge {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    margin-right: 0.5rem;
    border-radius: 0.25rem;
    background: var(--primary);
    color: white;
    font-size: 0.875rem;
  }

  article {
    max-width: 80ch;
    margin: 0 auto;
  }
</style>
